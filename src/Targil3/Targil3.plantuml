@startuml

title __Tarlgil3's Class Diagram__\n

  namespace Targil3 {
    class Targil3.Board {
        {static} + COLUMNS : int
        {static} + EMPTY : char
        {static} + ROWS : int
        {static} + board : char[][]
        + Board()
        {static} + boardIsFull()
        {static} + firstEmptyRow()
        {static} + isColumnFull()
    }
  }
  

  namespace Targil3 {
    class Targil3.BoardDecorator {
        + BoardDecorator()
    }
  }
  

  namespace Targil3 {
    class Targil3.ConsoleUI {
        ~ terminalInput : Scanner
        + ConsoleUI()
        + computerPlayerTurn()
        + exit()
        + humanPlayerTurn()
        + printBoard()
        + printMenu()
        + showWinner()
    }
  }
  

  namespace Targil3 {
    class Targil3.DebugProxy {
        - obj : Object
        {static} - writer : PrintWriter
        {static} + close_inner_file()
        + invoke()
        {static} + newInstance()
        - DebugProxy()
    }
  }
  

  namespace Targil3 {
    class Targil3.DecoratedBoard {
        + backgroundNum : int
        + DecoratedBoard()
        + setBackgroundNum()
    }
  }
  

  namespace Targil3 {
    class Targil3.Game {
        {static} + EMPTY : char
        {static} + O_PLAYER : char
        {static} + WIN : int
        {static} + X_PLAYER : char
        {static} + board : Board
        {static} + computerplays : boolean
        {static} + currentPlayer : char
        {static} + gameover : boolean
        {static} + changePlayer()
        {static} + startGame()
        {static} + playerNum()
        {static} + winningDisk()
    }
  }
  

  namespace Targil3 {
    class Targil3.GameAspect {
    }
  }
  

  namespace Targil3 {
    enum GameModes {
      EASY
      MEDIUM
      STRONG
    }
  }
  

  namespace Targil3 {
    class Targil3.LogUI {
        {static} - writer : PrintWriter
        + LogUI()
        {static} + closeFile()
        + printBoard()
        - captureBoard()
    }
  }
  

  namespace Targil3 {
    class Targil3.Main {
        {static} + main()
    }
  }
  

  namespace Targil3 {
    enum MenuOptions {
      Exit
      MultiPlayer
      SinglePlayer
    }
  }
  

  namespace Targil3 {
    interface Targil3.UserInterface {
        {abstract} + computerPlayerTurn()
        {abstract} + exit()
        {abstract} + humanPlayerTurn()
        {abstract} + printBoard()
        {abstract} + printMenu()
        {abstract} + showWinner()
    }
  }
  

  namespace Targil3 {
    class Targil3.UserInterfaceDecorator {
        + UserInterfaceDecorator()
        + computerPlayerTurn()
        + exit()
        + humanPlayerTurn()
        + printBoard()
        + printMenu()
        + showWinner()
    }
  }
  

  namespace Targil3 {
    interface Targil3.VirtualPlayer {
        {abstract} + MakeAChoise()
    }
  }
  

  namespace Targil3 {
    class Targil3.VirtualPlayerEasy {
        + MakeAChoise()
    }
  }
  

  namespace Targil3 {
    class Targil3.VirtualPlayerFactory {
        {static} - virtualPlayerMap : HashMap<String, VirtualPlayer>
        + getVirtialPlayer()
    }
  }
  

  namespace Targil3 {
    class Targil3.VirtualPlayerMedium {
        + MakeAChoise()
    }
  }
  


  Targil3.ConsoleUI .up.|> Targil3.UserInterface
  Targil3.DebugProxy .up.|> java.lang.reflect.InvocationHandler
  Targil3.LogUI -up-|> Targil3.UserInterfaceDecorator
  Targil3.UserInterfaceDecorator .up.|> Targil3.UserInterface
  Targil3.UserInterfaceDecorator o-- Targil3.UserInterface : userInterfaceToBeDecorated
  Targil3.VirtualPlayerEasy .up.|> Targil3.VirtualPlayer
  Targil3.VirtualPlayerMedium .up.|> Targil3.VirtualPlayer
  Targil3.VirtualPlayer .up.|> Targil3.VirtualPlayerFactory
  Targil3.BoardDecorator o-- Targil3.Board : board
  Targil3.DecoratedBoard -up-|> Targil3.BoardDecorator
  Targil3.UserInterface .up.|> Targil3.GameModes
  Targil3.UserInterface .up.|> Targil3.MenuOptions

  Targil3.Main --> Targil3.Game
  Targil3.Game ---> Targil3.Board
  Targil3.Game -> Targil3.UserInterface
  Targil3.Game --> Targil3.VirtualPlayerFactory


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
